name: Memotag API CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Test with pytest
      run: |
        pytest

  list-render-services:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
    - name: Check available Render services
      id: check-services
      run: |
        echo "Checking all available services with your API key..."
        RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" https://api.render.com/v1/services)
        echo "Response from Render API:"
        echo "$RESPONSE"
        
        # Extract service names and IDs for easier reading
        echo "Available service names:"
        echo "$RESPONSE" | grep -o '"name":"[^"]*"' || echo "No service names found or unable to parse response"
        
        echo "Available service IDs:"
        echo "$RESPONSE" | grep -o '"id":"[^"]*"' || echo "No service IDs found or unable to parse response"
        
        # Check if memotag-8lja exists
        if echo "$RESPONSE" | grep -q '"name":"memotag-8lja"'; then
          echo "memotag-8lja service found!"
          SERVICE_ID=$(echo "$RESPONSE" | grep -o '"id":"[^"]*"' | grep -A1 '"name":"memotag-8lja"' | head -1 | cut -d'"' -f4)
          echo "Service ID for memotag-8lja: $SERVICE_ID"
        else
          echo "memotag-8lja service not found in your Render account."
          echo "Please check the exact service name in your Render dashboard"
        fi

  manual-deploy:
    needs: [test, list-render-services]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render using direct API
      run: |
        echo "Attempting to deploy using the direct Render API..."
        DEPLOY_RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          https://api.render.com/v1/services/memotag-8lja/deploys)
        
        echo "Deployment response:"
        echo "$DEPLOY_RESPONSE"
        
        # Check if deployment was successful
        if echo "$DEPLOY_RESPONSE" | grep -q '"id":'; then
          echo "Deployment successfully triggered!"
        else
          echo "Failed to trigger deployment. Trying with srv- prefix..."
          
          # Try with common prefixes
          DEPLOY_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/srv-memotag-8lja/deploys)
            
          echo "Secondary deployment response:"
          echo "$DEPLOY_RESPONSE"
          
          if echo "$DEPLOY_RESPONSE" | grep -q '"id":'; then
            echo "Secondary deployment successfully triggered!"
          else
            echo "Both deployment attempts failed. Please check your service name in the Render dashboard."
            exit 1
          fi
        fi
